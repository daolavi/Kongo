// <auto-generated />
using System;
using Kongo.Core.DataServices;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kongo.Core.Migrations
{
    [DbContext(typeof(KongoDataStorage))]
    partial class KongoDataStorageModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Kongo.Core.Models.LogIngestionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Node_id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("Peer_addr")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset>("Ts")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Ts");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("Kongo.Core.Models.NodeStatisticsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockRecvCnt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastBlockDate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<long>("LastBlockFees")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastBlockHash")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("LastBlockHeight")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<DateTimeOffset?>("LastBlockTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("LastBlockTx")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<long>("TxRecvCnt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Uptime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("lastBlockSum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("NodeStatisticEntries");
                });

            modelBuilder.Entity("Kongo.Core.Models.ProcessedLeadersLogsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LeadersLogsJson")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("LeadersLogs");
                });

            modelBuilder.Entity("Kongo.Core.Models.ProcessedNetworkStatisticsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlocksReceivedInPast30Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FragmentsReceivedInPast30Min")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GossipReceivedInPast30Min")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastBlockReceivedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastFragmentReceivedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastGossipReceivedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalEstablishedConnections")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("NetworkStatistics");
                });

            modelBuilder.Entity("Kongo.Core.Models.ProcessedStakeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Dangling")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Epoch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PoolDistributionJson")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<long>("Unassigned")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("StakeDistribution");
                });

            modelBuilder.Entity("Kongo.Core.Models.StoredFragmentsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FragmentsInBlock")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FragmentsPending")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FragmentsReceviedFromNetwork")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FragmentsReceviedFromRest")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FragmentsRejected")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalFragments")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("FragmentStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
