@page "/"

@using Kongo.Core.DataServices
@using Kongo.Core.Models
@using System.Globalization

@inject KongoDataStorage _kongoDatabase

<Row>
	<Column>
		<Row>
			<Column ColumnSize="ColumnSize.Is8">
				<Card Margin="Margin.Is1.FromBottom">
					<CardHeader>
						<Row>
							<strong>
								Node Statistics:
							</strong>
						</Row>
						<Row>
							<small>
								Last run at: @_homePageModel.NodeStatistics?.Timestamp.ToUniversalTime();
							</small>
						</Row>
					</CardHeader>
					<CardBody>
						<Table IsNarrow="true" IsHoverable="true">
							<TableBody>
								<TableRow>
									<TableRowCell>BlockRecvCnt</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.BlockRecvCnt</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockDate</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockDate</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockFees</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockFees</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockHash</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockHash</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockHeight</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockHeight</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>lastBlockSum</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.lastBlockSum</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockTime</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockTime</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>LastBlockTx</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.LastBlockTx</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>TxRecvCnt</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.TxRecvCnt</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell>Uptime</TableRowCell>
									<TableRowCell>@_homePageModel.NodeStatistics?.Uptime</TableRowCell>
								</TableRow>
							</TableBody>
						</Table>
					</CardBody>
				</Card>

			</Column>
			<Column ColumnSize="ColumnSize.Is4">
				<Card Margin="Margin.Is1.FromBottom">
					<CardHeader>
						<Row>
							<strong>
								Transaction Summary:
							</strong>
						</Row>
						<Row>
							<small>
								Last run at: @_homePageModel.ProcessedFragments?.Timestamp.ToUniversalTime()
							</small>
						</Row>
					</CardHeader>
					<CardBody>
						<Table IsNarrow="true" IsHoverable="true">
							<TableBody>
								<TableRow>
									<TableRowCell><strong>Total Fragments:</strong></TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedFragments?.TotalFragments</TableRowCell>
									<TableRowCell></TableRowCell>
								</TableRow>
							</TableBody>
						</Table>

						<Table IsNarrow="true" IsHoverable="true">
							<TableHeader>
								<TableRow>
									<TableHeaderCell>Fragments From:</TableHeaderCell>
									<TableHeaderCell></TableHeaderCell>
									<TableHeaderCell></TableHeaderCell>
								</TableRow>
							</TableHeader>
							<TableBody>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Rest</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedFragments?.FragmentsReceviedFromRest</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Network</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedFragments?.FragmentsReceviedFromNetwork</TableRowCell>
								</TableRow>
							</TableBody>
						</Table>

						<Table IsNarrow="true" IsHoverable="true">
							<TableHeader>
								<TableRow>
									<TableHeaderCell>Fragments status:</TableHeaderCell>
									<TableHeaderCell></TableHeaderCell>
									<TableHeaderCell></TableHeaderCell>
								</TableRow>
							</TableHeader>
							<TableBody>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Pending</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedFragments?.FragmentsPending</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>InABlock</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedFragments?.FragmentsInBlock</TableRowCell>
								</TableRow>
							</TableBody>
						</Table>
					</CardBody>
				</Card>
			</Column>
		</Row>

		<Row>
			<Column ColumnSize="ColumnSize.Is6">
				<Card Margin="Margin.Is1.FromBottom">
					<CardHeader>
						<Row>
							<strong>
								Network Summary:
							</strong>
						</Row>
						<Row>
							<small>
								Last run at: @_homePageModel.ProcessedNetworkStatistics?.Timestamp.ToUniversalTime()
							</small>
						</Row>
					</CardHeader>
					<CardBody>
						<Table IsNarrow="true" IsHoverable="true">
							<TableBody>
								<TableRow>
									<TableRowCell><strong>Total Established Connections:</strong></TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.TotalEstablishedConnections</TableRowCell>
									<TableRowCell></TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell><strong>Last Events:</strong></TableRowCell>
									<TableRowCell></TableRowCell>
									<TableRowCell></TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Block Received:</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.LastBlockReceivedAt.Value.ToUniversalTime()</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Fragment Received:</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.LastFragmentReceivedAt.Value.ToUniversalTime()</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Gossip Received:</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.LastGossipReceivedAt.Value.ToUniversalTime()</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell></TableRowCell>
									<TableRowCell></TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell><strong>30 minute stats:</strong></TableRowCell>
									<TableRowCell></TableRowCell>
									<TableRowCell></TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Nodes Sending Block</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.BlocksReceivedInPast30Min</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Nodes Sending Fragments</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.FragmentsReceivedInPast30Min</TableRowCell>
								</TableRow>
								<TableRow>
									<TableRowCell></TableRowCell>
									<TableRowCell>Nodes Gossiping</TableRowCell>
									<TableRowCell>@_homePageModel.ProcessedNetworkStatistics?.GossipReceivedInPast30Min</TableRowCell>
								</TableRow>

							</TableBody>
						</Table>

					</CardBody>
				</Card>

			</Column>
			<Column ColumnSize="ColumnSize.Is6">
				<Card Margin="Margin.Is1.FromBottom">
					<CardHeader>
						<Row>
							<strong>
								Leader Events:
							</strong>
						</Row>
						<Row>
							<small>
								Last run at: 11/9/2019 8:47:08 PM +00:00
							</small>
						</Row>
					</CardHeader>
					<CardBody>
						This page left blank intentionally - for now :)
					</CardBody>
				</Card>
			</Column>
		</Row>
	</Column>
</Row>


@code {

	HomePageViewModel _homePageModel = new HomePageViewModel();

	protected override Task OnInitializedAsync()
	{
		_kongoDatabase.Database.EnsureCreated();

		RefreshHistory();

		return Task.FromResult(true);
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await HandleRedraw();
		}
	}

	Task HandleRedraw()
	{
		RefreshHistory();



		return Task.FromResult(true);
	}


	StoredFragmentsModel GetLastFragmentsSummary()
	{
		var records = _kongoDatabase.FragmentStatistics.AsEnumerable();
		if (records.Skip(1).Any())
		{
			return records.OrderBy(r => r.Id).Last();
		}
		return null;
	}

	ProcessedNetworkStatisticsModel GetLastNetworkSummary()
	{
		var records = _kongoDatabase.NetworkStatistics.AsEnumerable();
		if (records.Skip(1).Any())
		{
			return records.OrderBy(r => r.Id).Last();
		}
		return null;
	}

	NodeStatisticsModel GetLastNodeStatsSummary()
	{
		var records = _kongoDatabase.NodeStatisticEntries.AsEnumerable();
		if (records.Skip(1).Any())
		{
			return records.OrderBy(r => r.Id).Last();
		}
		return null;
	}

	void RefreshHistory()
	{
		_homePageModel.ProcessedFragments = GetLastFragmentsSummary();
		_homePageModel.ProcessedNetworkStatistics = GetLastNetworkSummary();
		_homePageModel.NodeStatistics = GetLastNodeStatsSummary();
	}

}